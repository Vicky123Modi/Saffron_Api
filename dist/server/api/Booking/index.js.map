{"version":3,"sources":["api/Booking/index.js"],"names":["express","require","controller","router","Router","post","validateAuthorizationUser","newBookingOrder","index","get","validateAuthorization","getBookingOrder","put","updateBookingOrder","getTeamMemberBookingOrder","use","err","req","res","next","arrayMessages","allErrorField","i","errors","length","Single_error","messages","toString","replace","push","join","status","json","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,aAAaD,QAAQ,sBAAR,CAAjB;;AAEA,IAAIE,SAASH,QAAQI,MAAR,EAAb;;AAEA;AACAD,OAAOE,IAAP,CAAY,GAAZ,EAAiB,qBAAYC,yBAA7B,EAAwD,iCAAS,qBAAYC,eAArB,CAAxD,EAA+FL,WAAWM,KAA1G;;AAEA;AACAL,OAAOM,GAAP,CAAW,GAAX,EAAgB,qBAAYC,qBAA5B,EAAmDR,WAAWS,eAA9D;;AAEA;AACAR,OAAOS,GAAP,CAAW,WAAX,EAAwB,qBAAYF,qBAApC,EAA0D,iCAAS,qBAAYG,kBAArB,CAA1D,EAAoGX,WAAWW,kBAA/G;;AAEA;AACAV,OAAOM,GAAP,CAAW,gCAAX,EAA6C,qBAAYC,qBAAzD,EAAgFR,WAAWY,yBAA3F;;AAEAX,OAAOY,GAAP,CAAW,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACtC,QAAIC,gBAAgB,EAApB;AACA,QAAIC,aAAJ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,IAAIO,MAAJ,CAAWC,MAA/B,EAAuCF,GAAvC,EAA4C;AACxC,YAAIG,eAAeT,IAAIO,MAAJ,CAAWD,CAAX,EAAcI,QAAd,CAAuBC,QAAvB,GACdC,OADc,CACN,IADM,EACA,EADA,CAAnB;AAEAR,sBAAcS,IAAd,CAAmBJ,YAAnB;AACH;AACDJ,oBAAgBD,cAAcU,IAAd,CAAmB,GAAnB,CAAhB;AACAZ,QAAIa,MAAJ,CAAW,GAAX,EACKC,IADL,CACU,qCAAkBX,aAAlB,EAAiCA,aAAjC,CADV;AAEH,CAXD;;AAaAY,OAAOC,OAAP,GAAiB/B,MAAjB","file":"index.js","sourcesContent":["import validations from './validation';\nimport validate from 'express-validation';\nimport {errorJsonResponse} from '../../config/commonHelper';\n\nvar express = require('express');\nvar controller = require('./Booking.controller');\n\nvar router = express.Router();\n\n//New Booking\nrouter.post('/', validations.validateAuthorizationUser, validate(validations.newBookingOrder), controller.index);\n\n//Get all order for SOD\nrouter.get('/', validations.validateAuthorization, controller.getBookingOrder);\n\n//Order move to process or finish\nrouter.put('/:orderId', validations.validateAuthorization,validate(validations.updateBookingOrder), controller.updateBookingOrder);\n\n//Get all order for TemMember\nrouter.get('/TeamMemberOrder/:teamMemberId', validations.validateAuthorization, controller.getTeamMemberBookingOrder);\n\nrouter.use(function (err, req, res, next) {\n    let arrayMessages = [];\n    let allErrorField;\n    for (let i = 0; i < err.errors.length; i++) {\n        let Single_error = err.errors[i].messages.toString()\n            .replace(/\"/g, '');\n        arrayMessages.push(Single_error);\n    }\n    allErrorField = arrayMessages.join(',');\n    res.status(400)\n        .json(errorJsonResponse(allErrorField, allErrorField));\n});\n\nmodule.exports = router;\n"]}