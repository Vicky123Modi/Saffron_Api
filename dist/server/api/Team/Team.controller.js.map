{"version":3,"sources":["api/Team/Team.controller.js"],"names":["index","deleteTeam","addNewTeam","updateTeam","formidable","require","fs","fs_extra","isImage","respondWithResult","res","statusCode","entity","status","json","handleError","err","send","req","find","_id","__v","exec","then","catch","next","params","teamId","remove","teamMember_id","deleteTeamMember","id","DeleteTeam","result","n","error","message","toString","form","IncomingForm","parse","fields","files","length","name","description","filetoupload","uuid","oldpath","path","newpath","dbpath","renameFilePath","toLowerCase","move","rename","TeamNewAdd","image_url","service_id","save","InsertTeam","data","errorMessage","TeamObject","update","UpdateTeam","nModified","Error"],"mappings":"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","file":"Team.controller.js","sourcesContent":["import Team from './Team.model';\r\nimport TeamMemberProduct from '../TeamMemberProduct/TeamMemberProduct.model';\r\nimport {errorJsonResponse, getGuid, TeamImageUploadLocation} from '../../config/commonHelper';\r\n\r\nvar formidable = require('formidable');\r\nvar fs = require('fs');\r\nvar fs_extra = require('fs-extra');\r\nconst isImage = require('is-image');\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n    statusCode = statusCode || 200;\r\n    return function (entity) {\r\n        if (entity) {\r\n            return res.status(statusCode)\r\n                .json(entity);\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n    statusCode = statusCode || 500;\r\n    return function (err) {\r\n        res.status(statusCode)\r\n            .send(err);\r\n    };\r\n}\r\n\r\n// Gets a list of Teams\r\nexport function index(req, res) {\r\n    return Team.find({}, {_id: 0, __v: 0})\r\n        .exec()\r\n        .then(respondWithResult(res, 200))\r\n        .catch(handleError(res));\r\n}\r\n\r\nexport function deleteTeam(req, res, next) {\r\n    try {\r\n        if (req.params.teamId) {\r\n            let teamId = req.params.teamId;\r\n\r\n            //Remove all the TeamMemberProduct\r\n            TeamMemberProduct.remove({teamMember_id: teamId}).exec((err, deleteTeamMember) => {\r\n                if (deleteTeamMember) {\r\n                    Team.remove({id: teamId})\r\n                        .exec(function (err, DeleteTeam) {\r\n                            if (!err) {\r\n                                if (DeleteTeam) {\r\n                                    if (DeleteTeam.result.n === 1) {\r\n                                        res.status(200)\r\n                                            .json({id: teamId, result: 'Deleted Successfully'});\r\n                                    } else {\r\n                                        res.status(400)\r\n                                            .json({result: 'Deleted Fail'});\r\n                                    }\r\n                                } else {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse('Invalid Post', 'Invalid Post'));\r\n                                }\r\n                            } else {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(err, 'Contact to your Developer'));\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n        } else {\r\n            res.status(400)\r\n                .json(errorJsonResponse('Id is required', 'Id is required'));\r\n        }\r\n\r\n    } catch (error) {\r\n        res.status(400)\r\n            .json(errorJsonResponse(error.message.toString(), 'Contact to your Developer'));\r\n    }\r\n}\r\n\r\nexport function addNewTeam(req, res, next) {\r\n    try {\r\n\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (Object.keys(files).length > 0 && fields.name && fields.description && isImage(files.filetoupload.name)) {\r\n                let uuid = getGuid();\r\n                let oldpath = files.filetoupload.path;\r\n                let newpath = TeamImageUploadLocation.path + files.filetoupload.name;\r\n                let dbpath = TeamImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                let renameFilePath = TeamImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                let name = fields.name.toLowerCase();\r\n                let description = fields.description.toLowerCase();\r\n\r\n                fs_extra.move(oldpath, newpath, function (err) {\r\n                    if (err) {\r\n                        res.status(500)\r\n                            .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                    } else {\r\n                        fs.rename(newpath, renameFilePath, function (err) {\r\n                            if (err) {\r\n                                res.status(500).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                            } else {\r\n                                let TeamNewAdd = new Team({\r\n                                    id: getGuid(),\r\n                                    image_url: dbpath,\r\n                                    name: name,\r\n                                    description: description,\r\n                                    service_id: []\r\n                                });\r\n                                TeamNewAdd.save()\r\n                                    .then(function (InsertTeam, err) {\r\n                                        if (!err) {\r\n                                            if (InsertTeam) {\r\n                                                res.status(200)\r\n                                                    .json({data: InsertTeam, result: \"Save Successfully\"});\r\n                                            } else {\r\n                                                res.status(400)\r\n                                                    .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\r\n                                            }\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                        }\r\n                                    });\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n            } else {\r\n\r\n                let errorMessage = \"\";\r\n                if (Object.keys(files).length <= 0) {\r\n                    errorMessage += \"Team image is required.\";\r\n                } else if (!fields.name) {\r\n                    errorMessage += \"Team name is required.\";\r\n                } else if (!fields.description) {\r\n                    errorMessage += \"Team description is required.\";\r\n                } else {\r\n                    if (!isImage(files.filetoupload.name)) {\r\n                        errorMessage += \"only image is allowed.\";\r\n                    }\r\n                }\r\n                res.status(400).json(errorJsonResponse(errorMessage, errorMessage));\r\n\r\n            }\r\n        });\r\n    }\r\n    catch (error) {\r\n        res.status(400).json(errorJsonResponse(error.message.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n\r\nexport function updateTeam(req, res, next) {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (fields.name && fields.description && fields.id) {\r\n\r\n                if (files.filetoupload && isImage(files.filetoupload.name)) {\r\n                    let uuid = getGuid();\r\n                    let oldpath = files.filetoupload.path;\r\n                    let newpath = TeamImageUploadLocation.path + files.filetoupload.name;\r\n                    let dbpath = TeamImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                    let renameFilePath = TeamImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                    let name = fields.name.toLowerCase();\r\n                    let description = fields.description.toLowerCase();\r\n                    let id = fields.id;\r\n\r\n                    let TeamObject = {\r\n                        id,\r\n                        image_url: dbpath,\r\n                        name,\r\n                        description\r\n                    };\r\n\r\n                    fs_extra.move(oldpath, newpath, function (err) {\r\n                        if (err) {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                        }\r\n                        else {\r\n                            fs.rename(newpath, renameFilePath, function (err) {\r\n                                if (err) {\r\n                                    res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                                } else {\r\n                                    Team.update({id: id}, {\r\n                                        image_url: dbpath,\r\n                                        name: name,\r\n                                        description: description\r\n                                    }).exec(function (err, UpdateTeam) {\r\n                                        if (!err) {\r\n                                            if (UpdateTeam) {\r\n                                                if (UpdateTeam.nModified === 1 || UpdateTeam.n === 1) {\r\n                                                    res.status(200)\r\n                                                        .json({\r\n                                                            data: TeamObject,\r\n                                                            result: \"updated Successfully \"\r\n                                                        });\r\n                                                } else {\r\n                                                    res.status(400)\r\n                                                        .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                                                }\r\n\r\n                                            } else {\r\n                                                res.status(400)\r\n                                                    .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                                            }\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                } else {\r\n\r\n                    let name = fields.name.toLowerCase();\r\n                    let description = fields.description.toLowerCase();\r\n                    let id = fields.id;\r\n\r\n                    let TeamObject = {\r\n                        id,\r\n                        name,\r\n                        description\r\n                    };\r\n\r\n                    Team.update({id: id}, {\r\n                        name: name,\r\n                        description: description\r\n                    }).exec(function (err, UpdateTeam) {\r\n                        if (!err) {\r\n                            if (UpdateTeam) {\r\n                                if (UpdateTeam.nModified === 1 || UpdateTeam.n === 1) {\r\n                                    res.status(200)\r\n                                        .json({\r\n                                            data: TeamObject,\r\n                                            result: \"updated Successfully \"\r\n                                        });\r\n                                } else {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                                }\r\n\r\n                            } else {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                            }\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n"]}