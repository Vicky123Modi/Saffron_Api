{"version":3,"sources":["api/oauth/oauth.controller.js"],"names":["index","index_contactNo","login","register","updateUser","deleteUser","uploadUserAvatar","changeUserBlockStatus","formidable","require","fs","fs_extra","isImage","respondWithResult","res","statusCode","entity","status","json","handleError","err","send","req","find","_id","__v","exec","then","catch","contactNo","params","userId","$regex","body","pass","check_field","password","findOne","block","loginUser","expiresIn","issued","Date","now","accessToken","sign","user","jwtSecretKey","expires","add","next","first_name","last_name","mobile_number","role","email_id","alreadyAvailable","findUser","length","registrationUser","id","contact_no","save","RegistrationSuccess","data","result","error","decoded","emailAddress","old_mobile_number","userObject","image_url","toString","update","UpdateUser","nModified","n","remove","DeleteUser","form","IncomingForm","parse","fields","files","filetoupload","name","uuid","oldpath","path","newpath","dbpath","renameFilePath","login_user","move","rename","UpdateOauth","message","requestObject"],"mappings":"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","file":"oauth.controller.js","sourcesContent":["import Oauth from './oauth.model';\r\nimport moment from 'moment/moment';\r\nimport {jwtdata, errorJsonResponse, getGuid, UserAvatarImageUploadLocation} from '../../config/commonHelper';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nvar formidable = require('formidable');\r\nvar fs = require('fs');\r\nvar fs_extra = require('fs-extra');\r\nconst isImage = require('is-image');\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n    statusCode = statusCode || 200;\r\n    return function (entity) {\r\n        if (entity) {\r\n            return res.status(statusCode).json(entity);\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n    statusCode = statusCode || 500;\r\n    return function (err) {\r\n        res.status(statusCode).send(err);\r\n    };\r\n}\r\n\r\n// Gets a list of oauth\r\nexport function index(req, res) {\r\n    return Oauth.find({}, {_id: 0, __v: 0}).exec()\r\n        .then(respondWithResult(res, 200))\r\n        .catch(handleError(res));\r\n}\r\n\r\nexport function index_contactNo(req, res) {\r\n    let contactNo = '^' + req.params.contactNo + '.*';\r\n    return Oauth.find({userId: {$regex: contactNo}}, {_id: 0, __v: 0}).exec()\r\n        .then(respondWithResult(res, 200))\r\n        .catch(handleError(res));\r\n}\r\n\r\n\r\n//Login Valid User\r\nexport function login(req, res) {\r\n    if (req.body) {\r\n        let pass;\r\n        let userId;\r\n        let check_field = true;\r\n\r\n        if (req.body.userId) {\r\n            userId = req.body.userId;\r\n            if (req.body.password) {\r\n                pass = req.body.password;\r\n            } else {\r\n                check_field = false;\r\n                res.status(500).json(errorJsonResponse(\"password is required\", \"password is required\"));\r\n            }\r\n        } else {\r\n            check_field = false;\r\n            res.status(500).json(errorJsonResponse(\"userId is required\", \"userId is required\"));\r\n        }\r\n\r\n        if (check_field) {\r\n\r\n            Oauth.findOne({userId: userId, password: pass, block: false}, {_id: 0, __v: 0})\r\n                .exec(function (err, loginUser) {\r\n                    if (!err) {\r\n                        if (loginUser) {\r\n                            let expiresIn = 60 * 60 * 24; // expires in 24 hours\r\n                            let issued = moment(Date.now());\r\n                            let accessToken = jwt.sign({user: loginUser}, jwtdata.jwtSecretKey, {\r\n                                expiresIn: expiresIn\r\n                            });\r\n                            let expires = moment(issued)\r\n                                .add(expiresIn, 'seconds');\r\n                            res.status(200)\r\n                                .json({\r\n                                    accessToken,\r\n                                    expiresIn,\r\n                                    issued,\r\n                                    expires\r\n                                });\r\n                        } else {\r\n                            res.status(400).json(errorJsonResponse(\"Invalid user\", \"Invalid user\"));\r\n                        }\r\n                    } else {\r\n                        res.status(400).json(errorJsonResponse(err, \"sorry, come to the shop.\"));\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nexport function register(req, res, next) {\r\n    if (req.body) {\r\n\r\n        let first_name = req.body.first_name;\r\n        let last_name = req.body.last_name;\r\n        let mobile_number = req.body.mobile_number;\r\n        let password = req.body.password;\r\n        let role = req.body.role;\r\n        let email_id = req.body.email_id;\r\n\r\n\r\n        try {\r\n\r\n            let alreadyAvailable = false;\r\n            //check mobile number is already register or not\r\n            Oauth.find({userId: mobile_number}).exec(function (err, findUser) {\r\n\r\n                if (findUser.length > 0) {\r\n                    alreadyAvailable = true;\r\n                }\r\n\r\n                if (!alreadyAvailable) {\r\n\r\n                    let registrationUser = new Oauth({\r\n                        id: getGuid(),\r\n                        first_name: first_name,\r\n                        last_name: last_name,\r\n                        contact_no: mobile_number,\r\n                        email_id: email_id,\r\n                        userId: mobile_number,\r\n                        password: password,\r\n                        role: role,\r\n                        block: false\r\n                    });\r\n                    registrationUser.save()\r\n                        .then(function (RegistrationSuccess, err) {\r\n                            if (!err) {\r\n                                if (RegistrationSuccess) {\r\n\r\n                                    let expiresIn = 60 * 60 * 24; // expires in 24 hours\r\n                                    let issued = moment(Date.now());\r\n                                    let accessToken = jwt.sign({user: RegistrationSuccess}, jwtdata.jwtSecretKey, {\r\n                                        expiresIn: expiresIn\r\n                                    });\r\n                                    let expires = moment(issued)\r\n                                        .add(expiresIn, 'seconds');\r\n                                    res.status(200)\r\n                                        .json({\r\n                                            data: RegistrationSuccess,\r\n                                            accessToken,\r\n                                            expiresIn,\r\n                                            issued,\r\n                                            expires,\r\n                                            result: \"Registration Successfully\"\r\n                                        });\r\n\r\n                                } else {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\r\n                                }\r\n                            } else {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                            }\r\n                        });\r\n\r\n                } else {\r\n                    res.status(400).json(errorJsonResponse(\"Mobile number is already register\", \"Mobile number is already register\"));\r\n                }\r\n            });\r\n        }\r\n        catch\r\n            (error) {\r\n            res.status(400).json(errorJsonResponse(error, \"contact to developer\"))\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateUser(req, res, next) {\r\n    if (req.body) {\r\n\r\n        let first_name = req.body.first_name;\r\n        let last_name = req.body.last_name;\r\n        let mobile_number = req.body.mobile_number;\r\n        let password = req.body.password;\r\n        let role = req.decoded.user.role;\r\n        let emailAddress = req.body.emailAddress;\r\n        let block = req.body.block;\r\n        let old_mobile_number = req.decoded.user.contact_no;\r\n\r\n        let userObject = {\r\n            id: req.decoded.user.id,\r\n            first_name: req.body.first_name,\r\n            last_name: req.body.last_name,\r\n            contact_no: req.body.mobile_number,\r\n            email_id: emailAddress,\r\n            userId: req.body.mobile_number,\r\n            image_url: req.body.image_url,\r\n            password: req.body.password,\r\n            role: role,\r\n            block: req.body.block,\r\n            _id: req.decoded.user._id\r\n        };\r\n\r\n\r\n        try {\r\n\r\n            if (mobile_number.toString() === old_mobile_number.toString()) {\r\n\r\n                Oauth.update({userId: old_mobile_number},\r\n                    {\r\n                        first_name: first_name,\r\n                        last_name: last_name,\r\n                        contact_no: mobile_number,\r\n                        email_id: emailAddress,\r\n                        userId: mobile_number,\r\n                        password: password,\r\n                        role: role,\r\n                        block: block\r\n                    }\r\n                ).exec(function (err, UpdateUser) {\r\n                    if (!err) {\r\n                        if (UpdateUser) {\r\n                            if (UpdateUser.nModified === 1 || UpdateUser.n === 1) {\r\n\r\n                                let expiresIn = 60 * 60 * 24; // expires in 24 hours\r\n                                let issued = moment(Date.now());\r\n                                let accessToken = jwt.sign({user: userObject}, jwtdata.jwtSecretKey, {\r\n                                    expiresIn: expiresIn\r\n                                });\r\n                                let expires = moment(issued)\r\n                                    .add(expiresIn, 'seconds');\r\n                                res.status(200)\r\n                                    .json({\r\n                                        accessToken,\r\n                                        expiresIn,\r\n                                        issued,\r\n                                        expires,\r\n                                        result: \"Updated Successfully\"\r\n                                    });\r\n\r\n                            } else {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                            }\r\n\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                        }\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                    }\r\n                });\r\n\r\n            } else {\r\n\r\n                let alreadyAvailable = false;\r\n                //check mobile number is already register or not\r\n                Oauth.find({userId: mobile_number}).exec(function (err, findUser) {\r\n\r\n                    if (findUser.length > 0) {\r\n                        alreadyAvailable = true;\r\n                    }\r\n\r\n                    if (!alreadyAvailable) {\r\n\r\n                        Oauth.update({userId: old_mobile_number},\r\n                            {\r\n                                first_name: first_name,\r\n                                last_name: last_name,\r\n                                contact_no: mobile_number,\r\n                                email_id: '',\r\n                                userId: mobile_number,\r\n                                password: password,\r\n                                role: role,\r\n                                block: block\r\n                            }\r\n                        ).exec(function (err, UpdateUser) {\r\n                            if (!err) {\r\n                                if (UpdateUser) {\r\n                                    if (UpdateUser.nModified === 1 || UpdateUser.n === 1) {\r\n\r\n                                        let expiresIn = 60 * 60 * 24; // expires in 24 hours\r\n                                        let issued = moment(Date.now());\r\n                                        let accessToken = jwt.sign({user: userObject}, jwtdata.jwtSecretKey, {\r\n                                            expiresIn: expiresIn\r\n                                        });\r\n                                        let expires = moment(issued)\r\n                                            .add(expiresIn, 'seconds');\r\n                                        res.status(200)\r\n                                            .json({\r\n                                                accessToken,\r\n                                                expiresIn,\r\n                                                issued,\r\n                                                expires,\r\n                                                result: \"Updated Successfully\"\r\n                                            });\r\n\r\n                                    } else {\r\n                                        res.status(400)\r\n                                            .json(errorJsonResponse(\"Not Found\", \"Not Found\"));\r\n                                    }\r\n\r\n                                } else {\r\n                                    res.status(400)\r\n                                        .json(errorJsonResponse(\"Invalid Image\", \"Invalid Image\"));\r\n                                }\r\n                            } else {\r\n                                res.status(400)\r\n                                    .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                            }\r\n                        });\r\n\r\n                    } else {\r\n                        res.status(400).json(errorJsonResponse(\"Mobile number is already register\", \"Mobile number is already register\"));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch\r\n            (error) {\r\n            res.status(400).json(errorJsonResponse(error, \"Contact to Developer\"))\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteUser(req, res, next) {\r\n    try {\r\n        let userId = req.params.userId;\r\n        Oauth.remove({id: userId})\r\n            .exec(function (err, DeleteUser) {\r\n                if (!err) {\r\n                    if (DeleteUser) {\r\n                        if (DeleteUser.result.n === 1) {\r\n                            res.status(200)\r\n                                .json({id: userId, result: \"Deleted Successfully\"});\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Deleted Fail\", \"Deleted Fail\"));\r\n                        }\r\n\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(\"Invalid Post\", \"Invalid Post\"));\r\n                    }\r\n                } else {\r\n                    res.status(400)\r\n                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                }\r\n            });\r\n\r\n    } catch (error) {\r\n        res.status(400).json(error);\r\n    }\r\n}\r\n\r\nexport function uploadUserAvatar(req, res, next) {\r\n\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (Object.keys(files).length > 0 && isImage(files.filetoupload.name)) {\r\n                let uuid = getGuid();\r\n                let oldpath = files.filetoupload.path;\r\n                let newpath = UserAvatarImageUploadLocation.path + files.filetoupload.name;\r\n                let dbpath = UserAvatarImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                let renameFilePath = UserAvatarImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                let login_user = req.decoded;\r\n\r\n                fs_extra.move(oldpath, newpath, function (err) {\r\n                    if (err) {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                    } else {\r\n                        fs.rename(newpath, renameFilePath, function (err) {\r\n                            if (err) {\r\n                                res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                            } else {\r\n                                Oauth.update({userId: login_user.user.userId}, {\r\n                                    image_url: dbpath,\r\n                                }).exec(function (err, UpdateOauth) {\r\n                                    if (!err) {\r\n                                        if (UpdateOauth) {\r\n                                            if (UpdateOauth.nModified === 1 || UpdateOauth.n === 1) {\r\n                                                res.status(200)\r\n                                                    .json({\r\n                                                        data: dbpath,\r\n                                                        result: \"updated Successfully \"\r\n                                                    });\r\n                                            } else {\r\n                                                res.status(400)\r\n                                                    .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                                            }\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                                        }\r\n                                    } else {\r\n                                        res.status(400)\r\n                                            .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n            } else {\r\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\r\n            }\r\n        });\r\n    }\r\n    catch (error) {\r\n        res.status(400).json(errorJsonResponse(error.message.toString(), error.message.toString()));\r\n    }\r\n}\r\n\r\nexport function changeUserBlockStatus(req, res, next) {\r\n    if (req.body) {\r\n\r\n        let requestObject = {\r\n            contact_no: req.body.mobile_number,\r\n            block: req.body.block,\r\n        };\r\n\r\n        try {\r\n            Oauth.update({userId: requestObject.contact_no},\r\n                {\r\n                    block: requestObject.block\r\n                }\r\n            ).exec(function (err, UpdateUser) {\r\n                if (!err) {\r\n                    if (UpdateUser) {\r\n                        if (UpdateUser.nModified === 1 || UpdateUser.n === 1) {\r\n\r\n                            res.status(200)\r\n                                .json({\r\n                                    data: requestObject,\r\n                                    result: \"Updated Successfully\"\r\n                                });\r\n\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                        }\r\n\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(\"Result Null\", \"Result Null\"));\r\n                    }\r\n                } else {\r\n                    res.status(400)\r\n                        .json(errorJsonResponse(err, \"Sorry retry again\"));\r\n                }\r\n            });\r\n        }\r\n        catch\r\n            (error) {\r\n            res.status(400).json(errorJsonResponse(error.message.toString(), \"Contact to your Developer\"))\r\n        }\r\n    }\r\n}\r\n"]}