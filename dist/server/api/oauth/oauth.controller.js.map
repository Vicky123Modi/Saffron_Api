{"version":3,"sources":["api/oauth/oauth.controller.js"],"names":["index","index_contactNo","login","register","updateUser","deleteUser","uploadUserAvatar","changeUserBlockStatus","formidable","require","fs","fs_extra","isImage","respondWithResult","res","statusCode","entity","status","json","handleError","err","send","req","find","_id","__v","exec","then","catch","contactNo","params","userId","$regex","body","pass","check_field","password","findOne","block","loginUser","expiresIn","issued","Date","now","accessToken","sign","user","jwtSecretKey","expires","add","startDayDateTime","tz","startOf","format","endDayDateTime","endOf","NormalDateStartDateTime","NormalDateEndDateTime","getCurrentDayOrders","customer_id","bookingEndTime","$gte","toUTCString","$lte","teamWiseProductList","sort","bookingStartTime","TodayOrders","next","first_name","last_name","mobile_number","role","email_id","alreadyAvailable","findUser","length","registrationUser","id","contact_no","image_url","save","RegistrationSuccess","data","result","error","decoded","emailAddress","old_mobile_number","userObject","toString","update","UpdateUser","nModified","n","remove","DeleteUser","form","IncomingForm","parse","fields","files","filetoupload","name","uuid","oldpath","path","newpath","dbpath","renameFilePath","login_user","move","rename","UpdateOauth","message","requestObject"],"mappings":"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","file":"oauth.controller.js","sourcesContent":["import Oauth from './oauth.model';\nimport Booking from '../Booking/Booking.model';\nimport moment from 'moment/moment';\nimport {jwtdata, errorJsonResponse, getGuid, UserAvatarImageUploadLocation} from '../../config/commonHelper';\nimport jwt from 'jsonwebtoken';\n\nvar formidable = require('formidable');\nvar fs = require('fs');\nvar fs_extra = require('fs-extra');\nconst isImage = require('is-image');\n\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function (entity) {\n        if (entity) {\n            return res.status(statusCode).json(entity);\n        }\n        return null;\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function (err) {\n        res.status(statusCode).send(err);\n    };\n}\n\n// Gets a list of oauth\nexport function index(req, res) {\n    return Oauth.find({}, {_id: 0, __v: 0}).exec()\n        .then(respondWithResult(res, 200))\n        .catch(handleError(res));\n}\n\nexport function index_contactNo(req, res) {\n    let contactNo = '^' + req.params.contactNo + '.*';\n    return Oauth.find({userId: {$regex: contactNo}}, {_id: 0, __v: 0}).exec()\n        .then(respondWithResult(res, 200))\n        .catch(handleError(res));\n}\n\n\n//Login Valid User\nexport function login(req, res) {\n    if (req.body) {\n        let pass;\n        let userId;\n        let check_field = true;\n\n        if (req.body.userId) {\n            userId = req.body.userId;\n            if (req.body.password) {\n                pass = req.body.password;\n            } else {\n                check_field = false;\n                res.status(500).json(errorJsonResponse(\"password is required\", \"password is required\"));\n            }\n        } else {\n            check_field = false;\n            res.status(500).json(errorJsonResponse(\"userId is required\", \"userId is required\"));\n        }\n\n        if (check_field) {\n\n            Oauth.findOne({userId: userId, password: pass, block: false}, {_id: 0, __v: 0})\n                .exec(async function (err, loginUser) {\n                    if (!err) {\n                        if (loginUser) {\n                            let expiresIn = 60 * 60 * 24; // expires in 24 hours\n                            let issued = moment(Date.now());\n                            let accessToken = jwt.sign({user: loginUser}, jwtdata.jwtSecretKey, {\n                                expiresIn: expiresIn\n                            });\n                            let expires = moment(issued)\n                                .add(expiresIn, 'seconds');\n\n                            let startDayDateTime = moment().tz('Asia/Kolkata').startOf('day').format();\n                            let endDayDateTime = moment().tz('Asia/Kolkata').endOf('day').format();\n                            let NormalDateStartDateTime = new Date(startDayDateTime);\n                            let NormalDateEndDateTime = new Date(endDayDateTime);\n\n                            let getCurrentDayOrders = await Booking.find({\n                                customer_id:userId,\n                                bookingEndTime: {\n                                    $gte: NormalDateStartDateTime.toUTCString(),\n                                    $lte: NormalDateEndDateTime.toUTCString()\n                                }\n                            }, {teamWiseProductList: 0})\n                                .sort({bookingStartTime: 1})\n                                .exec();\n\n                            res.status(200)\n                                .json({\n                                    accessToken,\n                                    expiresIn,\n                                    issued,\n                                    expires,\n                                    TodayOrders:getCurrentDayOrders\n                                });\n                        } else {\n                            res.status(400).json(errorJsonResponse(\"Invalid user\", \"Invalid user\"));\n                        }\n                    } else {\n                        res.status(400).json(errorJsonResponse(err, \"sorry, come to the shop.\"));\n                    }\n                });\n        }\n    }\n}\n\nexport function register(req, res, next) {\n    if (req.body) {\n\n        let first_name = req.body.first_name;\n        let last_name = req.body.last_name;\n        let mobile_number = req.body.mobile_number;\n        let password = req.body.password;\n        let role = req.body.role;\n        let email_id = req.body.email_id;\n\n\n        try {\n\n            let alreadyAvailable = false;\n            //check mobile number is already register or not\n            Oauth.find({userId: mobile_number}).exec(function (err, findUser) {\n\n                if (findUser.length > 0) {\n                    alreadyAvailable = true;\n                }\n\n                if (!alreadyAvailable) {\n\n                    let registrationUser = new Oauth({\n                        id: getGuid(),\n                        first_name: first_name,\n                        last_name: last_name,\n                        contact_no: mobile_number,\n                        email_id: email_id,\n                        userId: mobile_number,\n                        password: password,\n                        role: role,\n                        block: false,\n                        image_url: \"\"\n                    });\n                    registrationUser.save()\n                        .then(function (RegistrationSuccess, err) {\n                            if (!err) {\n                                if (RegistrationSuccess) {\n\n                                    let expiresIn = 60 * 60 * 24; // expires in 24 hours\n                                    let issued = moment(Date.now());\n                                    let accessToken = jwt.sign({user: RegistrationSuccess}, jwtdata.jwtSecretKey, {\n                                        expiresIn: expiresIn\n                                    });\n                                    let expires = moment(issued)\n                                        .add(expiresIn, 'seconds');\n                                    res.status(200)\n                                        .json({\n                                            data: RegistrationSuccess,\n                                            accessToken,\n                                            expiresIn,\n                                            issued,\n                                            expires,\n                                            result: \"Registration Successfully\"\n                                        });\n\n                                } else {\n                                    res.status(400)\n                                        .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\n                                }\n                            } else {\n                                res.status(400)\n                                    .json(errorJsonResponse(err, \"Contact to your Developer\"));\n                            }\n                        });\n\n                } else {\n                    res.status(400).json(errorJsonResponse(\"Mobile number is already register\", \"Mobile number is already register\"));\n                }\n            });\n        }\n        catch\n            (error) {\n            res.status(400).json(errorJsonResponse(error, \"contact to developer\"))\n        }\n    }\n}\n\nexport function updateUser(req, res, next) {\n    if (req.body) {\n\n        let first_name = req.body.first_name;\n        let last_name = req.body.last_name;\n        let mobile_number = req.body.mobile_number;\n        let password = req.body.password;\n        let role = req.decoded.user.role;\n        let emailAddress = req.body.emailAddress;\n        let block = req.body.block;\n        let old_mobile_number = req.decoded.user.contact_no;\n\n        let userObject = {\n            id: req.decoded.user.id,\n            first_name: req.body.first_name,\n            last_name: req.body.last_name,\n            contact_no: req.body.mobile_number,\n            email_id: emailAddress,\n            userId: req.body.mobile_number,\n            image_url: req.body.image_url,\n            password: req.body.password,\n            role: role,\n            block: req.body.block,\n            _id: req.decoded.user._id\n        };\n\n\n        try {\n\n            if (mobile_number.toString() === old_mobile_number.toString()) {\n\n                Oauth.update({userId: old_mobile_number},\n                    {\n                        first_name: first_name,\n                        last_name: last_name,\n                        contact_no: mobile_number,\n                        email_id: emailAddress,\n                        userId: mobile_number,\n                        password: password,\n                        role: role,\n                        block: block\n                    }\n                ).exec(function (err, UpdateUser) {\n                    if (!err) {\n                        if (UpdateUser) {\n                            if (UpdateUser.nModified === 1 || UpdateUser.n === 1) {\n\n                                let expiresIn = 60 * 60 * 24; // expires in 24 hours\n                                let issued = moment(Date.now());\n                                let accessToken = jwt.sign({user: userObject}, jwtdata.jwtSecretKey, {\n                                    expiresIn: expiresIn\n                                });\n                                let expires = moment(issued)\n                                    .add(expiresIn, 'seconds');\n                                res.status(200)\n                                    .json({\n                                        accessToken,\n                                        expiresIn,\n                                        issued,\n                                        expires,\n                                        result: \"Updated Successfully\"\n                                    });\n\n                            } else {\n                                res.status(400)\n                                    .json(errorJsonResponse(\"not found\", \"not found\"));\n                            }\n\n                        } else {\n                            res.status(400)\n                                .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\n                        }\n                    } else {\n                        res.status(400)\n                            .json(errorJsonResponse(err, \"Contact to your Developer\"));\n                    }\n                });\n\n            } else {\n\n                let alreadyAvailable = false;\n                //check mobile number is already register or not\n                Oauth.find({userId: mobile_number}).exec(function (err, findUser) {\n\n                    if (findUser.length > 0) {\n                        alreadyAvailable = true;\n                    }\n\n                    if (!alreadyAvailable) {\n\n                        Oauth.update({userId: old_mobile_number},\n                            {\n                                first_name: first_name,\n                                last_name: last_name,\n                                contact_no: mobile_number,\n                                email_id: '',\n                                userId: mobile_number,\n                                password: password,\n                                role: role,\n                                block: block\n                            }\n                        ).exec(function (err, UpdateUser) {\n                            if (!err) {\n                                if (UpdateUser) {\n                                    if (UpdateUser.nModified === 1 || UpdateUser.n === 1) {\n\n                                        let expiresIn = 60 * 60 * 24; // expires in 24 hours\n                                        let issued = moment(Date.now());\n                                        let accessToken = jwt.sign({user: userObject}, jwtdata.jwtSecretKey, {\n                                            expiresIn: expiresIn\n                                        });\n                                        let expires = moment(issued)\n                                            .add(expiresIn, 'seconds');\n                                        res.status(200)\n                                            .json({\n                                                accessToken,\n                                                expiresIn,\n                                                issued,\n                                                expires,\n                                                result: \"Updated Successfully\"\n                                            });\n\n                                    } else {\n                                        res.status(400)\n                                            .json(errorJsonResponse(\"Not Found\", \"Not Found\"));\n                                    }\n\n                                } else {\n                                    res.status(400)\n                                        .json(errorJsonResponse(\"Invalid Image\", \"Invalid Image\"));\n                                }\n                            } else {\n                                res.status(400)\n                                    .json(errorJsonResponse(err, \"Contact to your Developer\"));\n                            }\n                        });\n\n                    } else {\n                        res.status(400).json(errorJsonResponse(\"Mobile number is already register\", \"Mobile number is already register\"));\n                    }\n                });\n            }\n        }\n        catch\n            (error) {\n            res.status(400).json(errorJsonResponse(error, \"Contact to Developer\"))\n        }\n    }\n}\n\nexport function deleteUser(req, res, next) {\n    try {\n        let userId = req.params.userId;\n        Oauth.remove({id: userId})\n            .exec(function (err, DeleteUser) {\n                if (!err) {\n                    if (DeleteUser) {\n                        if (DeleteUser.result.n === 1) {\n                            res.status(200)\n                                .json({id: userId, result: \"Deleted Successfully\"});\n                        } else {\n                            res.status(400)\n                                .json(errorJsonResponse(\"Deleted Fail\", \"Deleted Fail\"));\n                        }\n\n                    } else {\n                        res.status(400)\n                            .json(errorJsonResponse(\"Invalid Post\", \"Invalid Post\"));\n                    }\n                } else {\n                    res.status(400)\n                        .json(errorJsonResponse(err, \"Contact to your Developer\"));\n                }\n            });\n\n    } catch (error) {\n        res.status(400).json(error);\n    }\n}\n\nexport function uploadUserAvatar(req, res, next) {\n\n    try {\n        let form = new formidable.IncomingForm();\n        form.parse(req, function (err, fields, files) {\n\n            if (Object.keys(files).length > 0 && isImage(files.filetoupload.name)) {\n                let uuid = getGuid();\n                let oldpath = files.filetoupload.path;\n                let newpath = UserAvatarImageUploadLocation.path + files.filetoupload.name;\n                let dbpath = UserAvatarImageUploadLocation.dbpath + uuid + files.filetoupload.name;\n                let renameFilePath = UserAvatarImageUploadLocation.path + uuid + files.filetoupload.name;\n                let login_user = req.decoded;\n\n                fs_extra.move(oldpath, newpath, function (err) {\n                    if (err) {\n                        res.status(400)\n                            .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\n                    } else {\n                        fs.rename(newpath, renameFilePath, function (err) {\n                            if (err) {\n                                res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\n                            } else {\n                                Oauth.update({userId: login_user.user.userId}, {\n                                    image_url: dbpath,\n                                }).exec(function (err, UpdateOauth) {\n                                    if (!err) {\n                                        if (UpdateOauth) {\n                                            if (UpdateOauth.nModified === 1 || UpdateOauth.n === 1) {\n                                                res.status(200)\n                                                    .json({\n                                                        data: dbpath,\n                                                        result: \"updated Successfully \"\n                                                    });\n                                            } else {\n                                                res.status(400)\n                                                    .json(errorJsonResponse(\"not found\", \"not found\"));\n                                            }\n                                        } else {\n                                            res.status(400)\n                                                .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\n                                        }\n                                    } else {\n                                        res.status(400)\n                                            .json(errorJsonResponse(err, \"Contact to your Developer\"));\n                                    }\n                                });\n                            }\n                        });\n                    }\n                })\n            } else {\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\n            }\n        });\n    }\n    catch (error) {\n        res.status(400).json(errorJsonResponse(error.message.toString(), error.message.toString()));\n    }\n}\n\nexport function changeUserBlockStatus(req, res, next) {\n    if (req.body) {\n\n        let requestObject = {\n            contact_no: req.body.mobile_number,\n            block: req.body.block,\n        };\n\n        try {\n            Oauth.update({userId: requestObject.contact_no},\n                {\n                    block: requestObject.block\n                }\n            ).exec(function (err, UpdateUser) {\n                if (!err) {\n                    if (UpdateUser) {\n                        if (UpdateUser.nModified === 1 || UpdateUser.n === 1) {\n\n                            res.status(200)\n                                .json({\n                                    data: requestObject,\n                                    result: \"Updated Successfully\"\n                                });\n\n                        } else {\n                            res.status(400)\n                                .json(errorJsonResponse(\"not found\", \"not found\"));\n                        }\n\n                    } else {\n                        res.status(400)\n                            .json(errorJsonResponse(\"Result Null\", \"Result Null\"));\n                    }\n                } else {\n                    res.status(400)\n                        .json(errorJsonResponse(err, \"Sorry retry again\"));\n                }\n            });\n        }\n        catch\n            (error) {\n            res.status(400).json(errorJsonResponse(error.message.toString(), \"Contact to your Developer\"))\n        }\n    }\n}\n"]}