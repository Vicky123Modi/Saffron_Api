{"version":3,"sources":["api/Service/Service.controller.js"],"names":["index","deleteService","addNewService","updateService","testingPublishSocket","formidable","require","fs","fs_extra","isImage","respondWithResult","res","statusCode","entity","status","json","handleError","err","send","req","find","_id","__v","exec","then","catch","next","params","serviceId","remove","service_id","DeleteGallery","listProductItems","productList","forEach","product","push","id","deleteVideo","product_id","$in","deleteTeamMemberProduct","DeleteProduct","DeleteService","result","n","error","form","IncomingForm","parse","fields","files","length","title","description","displayOrder","filetoupload","name","uuid","oldpath","path","newpath","dbpath","renameFilePath","toLowerCase","move","toString","rename","ServiceNewAdd","image_url","date","Date","toISOString","save","InsertService","data","errorMessage","Error","serviceObject","update","UpdateService","nModified","requestObj","message","body","response","console","log"],"mappings":"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","file":"Service.controller.js","sourcesContent":["import Service from './Service.model';\r\nimport {errorJsonResponse, serviceImageUploadLocation, getGuid} from '../../config/commonHelper';\r\nimport Gallery from '../Gallery/Gallery.model';\r\nimport Product from '../Product/Product.model';\r\nimport TeamMemberProduct from '../TeamMemberProduct/TeamMemberProduct.model';\r\nimport Video from '../Video/Video.model';\r\n\r\nimport {socketPublishMessage} from '../Socket/index';\r\n\r\n\r\nvar formidable = require('formidable');\r\nvar fs = require('fs');\r\nvar fs_extra = require('fs-extra');\r\nconst isImage = require('is-image');\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n    statusCode = statusCode || 200;\r\n    return function (entity) {\r\n        if (entity) {\r\n            // res.writeHead(200, {'Content-Type': 'text/plain'});\r\n            // res.end('Hello World\\n');\r\n            // return res;\r\n            return res.status(statusCode).json(entity);\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n    statusCode = statusCode || 500;\r\n    return function (err) {\r\n        res.status(statusCode).send(err);\r\n    };\r\n}\r\n\r\n// Gets a list of Services\r\nexport function index(req, res) {\r\n    return Service.find({}, {_id: 0, __v: 0}).exec()\r\n        .then(respondWithResult(res, 200))\r\n        .catch(handleError(res));\r\n}\r\n\r\nexport function deleteService(req, res, next) {\r\n    try {\r\n        if (req.params.serviceId) {\r\n            let serviceId = req.params.serviceId;\r\n            // delete all Gallery\r\n            Gallery.remove({service_id: serviceId})\r\n                .exec(function (err, DeleteGallery) {\r\n                    if (!err) {\r\n                        if (DeleteGallery) {\r\n\r\n                            //delete all TeamMemberProduct\r\n                            Product.find({service_id: serviceId}).exec((err, listProductItems) => {\r\n\r\n                                let productList = [];\r\n                                listProductItems.forEach((product) => {\r\n                                    productList.push(product.id);\r\n                                });\r\n\r\n                                //delete video\r\n                                Video.remove({serviceId: serviceId}).exec((err, deleteVideo) => {\r\n                                    if (deleteVideo) {\r\n                                        TeamMemberProduct.remove({product_id: {$in: productList}}).exec((err, deleteTeamMemberProduct) => {\r\n                                            // delete all Product\r\n                                            if (deleteTeamMemberProduct) {\r\n                                                Product.remove({service_id: serviceId})\r\n                                                    .exec(function (err, DeleteProduct) {\r\n                                                        if (!err) {\r\n                                                            if (DeleteProduct) {\r\n                                                                // Delete Service\r\n                                                                Service.remove({id: serviceId})\r\n                                                                    .exec(function (err, DeleteService) {\r\n                                                                        if (!err) {\r\n                                                                            if (DeleteService) {\r\n                                                                                if (DeleteService.result.n === 1) {\r\n                                                                                    res.status(200)\r\n                                                                                        .json({\r\n                                                                                            id: serviceId,\r\n                                                                                            result: \"Deleted Successfully\"\r\n                                                                                        });\r\n                                                                                } else {\r\n                                                                                    res.status(400)\r\n                                                                                        .json(errorJsonResponse(\"service not found\", \"service not found\"));\r\n                                                                                }\r\n                                                                            }\r\n                                                                        }\r\n                                                                    });\r\n                                                            }\r\n                                                        } else {\r\n                                                            res.status(400)\r\n                                                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                                        }\r\n                                                    });\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                            });\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(\"Invalid Service\", \"Invalid Service\"));\r\n                        }\r\n                    } else {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                    }\r\n                });\r\n        } else {\r\n            res.status(400)\r\n                .json(errorJsonResponse(\"Id is required\", \"Id is required\"));\r\n        }\r\n\r\n    } catch (error) {\r\n        res.status(400).json(errorJsonResponse(error, \"Contact to your Developer\"));\r\n    }\r\n}\r\n\r\nexport function addNewService(req, res, next) {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (Object.keys(files).length > 0 && fields.title && fields.description && fields.displayOrder && isImage(files.filetoupload.name)) {\r\n                let uuid = getGuid();\r\n                let oldpath = files.filetoupload.path;\r\n                let newpath = serviceImageUploadLocation.path + files.filetoupload.name;\r\n                let dbpath = serviceImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                let renameFilePath = serviceImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                let title = fields.title.toLowerCase();\r\n                let description = fields.description.toLowerCase();\r\n                let displayOrder = fields.displayOrder;\r\n\r\n                fs_extra.move(oldpath, newpath, function (err) {\r\n                    if (err) {\r\n                        res.status(400)\r\n                            .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                    } else {\r\n                        fs.rename(newpath, renameFilePath, function (err) {\r\n                            if (err) {\r\n                                res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                            } else {\r\n                                let ServiceNewAdd = new Service({\r\n                                    id: getGuid(),\r\n                                    image_url: dbpath,\r\n                                    title: title,\r\n                                    description: description,\r\n                                    displayOrder: displayOrder,\r\n                                    date: new Date().toISOString()\r\n                                });\r\n                                ServiceNewAdd.save()\r\n                                    .then(function (InsertService, err) {\r\n                                        if (!err) {\r\n                                            if (InsertService) {\r\n                                                res.status(200)\r\n                                                    .json({data: InsertService, result: \"Save Successfully\"});\r\n                                            } else {\r\n                                                res.status(400)\r\n                                                    .json(errorJsonResponse(\"Error in db response\", \"Invalid_Image\"));\r\n                                            }\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                        }\r\n                                    });\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n            } else {\r\n                let errorMessage = \"\";\r\n                if (Object.keys(files).length <= 0) {\r\n                    errorMessage += \"Service image is required.\";\r\n                } else if (!fields.title) {\r\n                    errorMessage += \"Service title is required.\";\r\n                } else if (!fields.description) {\r\n                    errorMessage += \"Service description is required.\";\r\n                } else if (!fields.displayOrder) {\r\n                    errorMessage += \"Service displayOrder is required.\";\r\n                }\r\n                else {\r\n                    if (!isImage(files.filetoupload.name)) {\r\n                        errorMessage += \"only image is allowed.\";\r\n                    }\r\n                }\r\n\r\n                res.status(400).json(errorJsonResponse(errorMessage, errorMessage));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n\r\nexport function updateService(req, res, next) {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.parse(req, function (err, fields, files) {\r\n\r\n            if (fields.title && fields.description && fields.id && fields.displayOrder) {\r\n\r\n                if (files.filetoupload && isImage(files.filetoupload.name)) {\r\n                    let uuid = getGuid();\r\n                    let oldpath = files.filetoupload.path;\r\n                    let newpath = serviceImageUploadLocation.path + files.filetoupload.name;\r\n                    let dbpath = serviceImageUploadLocation.dbpath + uuid + files.filetoupload.name;\r\n                    let renameFilePath = serviceImageUploadLocation.path + uuid + files.filetoupload.name;\r\n                    let title = fields.title.toLowerCase();\r\n                    let description = fields.description.toLowerCase();\r\n                    let displayOrder = fields.displayOrder;\r\n                    let id = fields.id;\r\n\r\n                    let serviceObject = {\r\n                        id,\r\n                        image_url: dbpath,\r\n                        title,\r\n                        description,\r\n                        displayOrder\r\n                    };\r\n\r\n\r\n                    fs_extra.move(oldpath, newpath, function (err) {\r\n                        if (err) {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(err.toString(), \"Same Name Image Already Available On Server\"));\r\n                        } else {\r\n                            fs.rename(newpath, renameFilePath, function (err) {\r\n                                if (err) {\r\n                                    res.status(400).json(errorJsonResponse(err.toString(), \"Fail to Rename file\"));\r\n                                } else {\r\n                                    Service.update({id: id}, {\r\n                                        image_url: dbpath,\r\n                                        title: title,\r\n                                        description: description,\r\n                                        displayOrder: displayOrder\r\n                                    }).exec(function (err, UpdateService) {\r\n                                        if (!err) {\r\n                                            if (UpdateService) {\r\n                                                if (UpdateService.nModified === 1 || UpdateService.n === 1) {\r\n                                                    res.status(200)\r\n                                                        .json({\r\n                                                            data: serviceObject,\r\n                                                            result: \"updated Successfully \"\r\n                                                        });\r\n                                                } else {\r\n                                                    res.status(400)\r\n                                                        .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                                                }\r\n\r\n                                            } else {\r\n                                                res.status(400)\r\n                                                    .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                                            }\r\n                                        } else {\r\n                                            res.status(400)\r\n                                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                } else {\r\n\r\n                    let title = fields.title.toLowerCase();\r\n                    let description = fields.description.toLowerCase();\r\n                    let id = fields.id;\r\n                    let displayOrder = fields.displayOrder;\r\n\r\n                    let serviceObject = {\r\n                        id,\r\n                        title,\r\n                        description,\r\n                        displayOrder\r\n                    };\r\n\r\n                    Service.update({id: id}, {\r\n                        title: title,\r\n                        description: description,\r\n                        displayOrder: displayOrder\r\n                    }).exec(function (err, UpdateService) {\r\n                        if (!err) {\r\n                            if (UpdateService) {\r\n                                if (UpdateService.nModified === 1 || UpdateService.n === 1) {\r\n                                    res.status(200)\r\n                                        .json({\r\n                                            data: serviceObject,\r\n                                            result: \"updated Successfully \"\r\n                                        });\r\n                                } else {\r\n                                    res.status(403)\r\n                                        .json(errorJsonResponse(\"not found\", \"not found\"));\r\n                                }\r\n\r\n                            } else {\r\n                                res.status(404)\r\n                                    .json(errorJsonResponse(\"Invalid_Image\", \"Invalid_Image\"));\r\n                            }\r\n                        } else {\r\n                            res.status(400)\r\n                                .json(errorJsonResponse(err, \"Contact to your Developer\"));\r\n                        }\r\n                    });\r\n\r\n                }\r\n\r\n            } else {\r\n                res.status(400).json(errorJsonResponse(\"Invalid Request\", \"Invalid Request\"));\r\n            }\r\n        });\r\n    }\r\n    catch (Error) {\r\n        res.status(400).json(errorJsonResponse(Error.toString(), \"Invalid Image\"));\r\n    }\r\n}\r\n\r\nexport function testingPublishSocket(req, res, next) {\r\n    try {\r\n\r\n        let requestObj = {\r\n            message: req.body.message,\r\n            data: req.body.data,\r\n        };\r\n\r\n        socketPublishMessage(requestObj.message, {data: requestObj.data}).then((response) => {\r\n            res.status(200).json({result: response});\r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.log(error.message.toString());\r\n        res.status(403).json({result: error.message.toString()});\r\n    }\r\n}\r\n"]}